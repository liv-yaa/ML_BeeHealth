# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/healthz.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from clarifai.rest.grpc.proto.clarifai.api.status import status_pb2 as proto_dot_clarifai_dot_api_dot_status_dot_status__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/clarifai/api/healthz.proto',
  package='clarifai.api',
  syntax='proto3',
  serialized_pb=_b('\n proto/clarifai/api/healthz.proto\x12\x0c\x63larifai.api\x1a&proto/clarifai/api/status/status.proto\"\x13\n\x11GetHealthzRequest\"O\n\x12GetHealthzResponse\x12+\n\x06status\x18\x01 \x01(\x0b\x32\x1b.clarifai.api.status.Status\x12\x0c\n\x04time\x18\x02 \x01(\tBZ\n\x1b\x63larifai2.internal.grpc.apiZ\x03\x61pi\xa2\x02\x04\x43\x41IP\xaa\x02\x16\x43larifai.Internal.GRPC\xc2\x02\x01_\xca\x02\x11\x43larifai\\Internalb\x06proto3')
  ,
  dependencies=[proto_dot_clarifai_dot_api_dot_status_dot_status__pb2.DESCRIPTOR,])




_GETHEALTHZREQUEST = _descriptor.Descriptor(
  name='GetHealthzRequest',
  full_name='clarifai.api.GetHealthzRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=90,
  serialized_end=109,
)


_GETHEALTHZRESPONSE = _descriptor.Descriptor(
  name='GetHealthzResponse',
  full_name='clarifai.api.GetHealthzResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='clarifai.api.GetHealthzResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time', full_name='clarifai.api.GetHealthzResponse.time', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=111,
  serialized_end=190,
)

_GETHEALTHZRESPONSE.fields_by_name['status'].message_type = proto_dot_clarifai_dot_api_dot_status_dot_status__pb2._STATUS
DESCRIPTOR.message_types_by_name['GetHealthzRequest'] = _GETHEALTHZREQUEST
DESCRIPTOR.message_types_by_name['GetHealthzResponse'] = _GETHEALTHZRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GetHealthzRequest = _reflection.GeneratedProtocolMessageType('GetHealthzRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETHEALTHZREQUEST,
  __module__ = 'proto.clarifai.api.healthz_pb2'
  # @@protoc_insertion_point(class_scope:clarifai.api.GetHealthzRequest)
  ))
_sym_db.RegisterMessage(GetHealthzRequest)

GetHealthzResponse = _reflection.GeneratedProtocolMessageType('GetHealthzResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETHEALTHZRESPONSE,
  __module__ = 'proto.clarifai.api.healthz_pb2'
  # @@protoc_insertion_point(class_scope:clarifai.api.GetHealthzResponse)
  ))
_sym_db.RegisterMessage(GetHealthzResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\033clarifai2.internal.grpc.apiZ\003api\242\002\004CAIP\252\002\026Clarifai.Internal.GRPC\302\002\001_\312\002\021Clarifai\\Internal'))
# @@protoc_insertion_point(module_scope)
